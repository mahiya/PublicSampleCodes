AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for API Gateway, Lambda, Cognito
Globals:
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"
  Function:
    Timeout: 3
    MemorySize: 128
    Runtime: nodejs8.10
    Handler: app.lambdaHandler
    Environment:
      Variables:
        DYNAMODB_TABLENAME: TodoList2
    Tags: 
      project: SampleApp1
    ReservedConcurrentExecutions: 1
 
Resources:
  # API Gateway
  TodoApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Production
      Auth:
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: arn:aws:cognito-idp:ap-northeast-1:772230789239:userpool/ap-northeast-1_r9CCbPG8f
            Identity:
              Header: Authorization
  # Function: ListTodo
  ListTodo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todo/get/
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:Query
              Resource: 'arn:aws:dynamodb:ap-northeast-1:772230789239:table/TodoList2'               
      Events: 
        ApiCall:
          Type: Api 
          Properties:
            Path: /todo
            Method: GET
            RestApiId: !Ref TodoApiGateway
            Auth:
              Authorizer: CognitoAuthorizer
  # Function: AddTodo
  AddTodo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todo/post/
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: 'arn:aws:dynamodb:ap-northeast-1:772230789239:table/TodoList2'               
      Events: 
        ApiCall:
          Type: Api 
          Properties:
            Path: /todo
            Method: POST
            RestApiId: !Ref TodoApiGateway
            Auth:
              Authorizer: CognitoAuthorizer
  # Function: DeleteTodo
  DeleteTodo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todo/delete
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:DeleteItem
              Resource: 'arn:aws:dynamodb:ap-northeast-1:772230789239:table/TodoList2'               
      Events: 
        ApiCall:
          Type: Api 
          Properties:
            Path: /todo/{id}
            Method: DELETE
            RestApiId: !Ref TodoApiGateway
            Auth:
              Authorizer: CognitoAuthorizer
  # Function: Debug
  DebugFunc:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todo/debug/          
      Events: 
        ApiCall:
          Type: Api 
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref TodoApiGateway
            #Auth:
              #Authorizer: CognitoAuthorizer